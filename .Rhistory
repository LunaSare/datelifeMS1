# phyloch::axisGeo(strat2012)  # try this later
legend(legend = c("subset chronograms from OToL",
"SDM supertree",
"median tree"),
x = -25, y = 100, cex = 0.6,
col = c("lightgrey", "#56B4E9", "#CC79A7"),
bty = "n", lty = 1)
pdf(file = "/Users/luna/Google Drive/datelife/dating_otol/3_felidae/felid_ltts_1_2018.03.20.pdf", height = 4, width = 4)
ape::ltt.plot(felid_gdr_phylo_all$phylo_all[[i]], xlim=c(-25,0), ylim = c(0, 100), col= "lightgrey")
for (i in 2:length(felid_gdr_phylo_all$phylo_all)){
ape::ltt.lines(felid_gdr_phylo_all$phylo_all[[i]], col= "lightgrey")
}
ape::ltt.lines(felid_sdm$phy, col = "#56B4E9")  # upgma tree
ape::ltt.lines(felid_gdr_phylo_median, col = "#CC79A7")
# ape::ltt.plot(datelife_result_x_phylo[[1]], xlim=c(0, 30), backward = FALSE)  # added some missing taxa by congruifying with otols synthetic tree
# data(strat2012, package="phyloch")
# phyloch::axisGeo(strat2012)  # try this later
legend(legend = c("subset chronograms from OToL",
"SDM supertree",
"median tree"),
x = -25, y = 100, cex = 0.6,
col = c("lightgrey", "#56B4E9", "#CC79A7"),
bty = "n", lty = 1)
dev.off()
ape::ltt.plot(felid_sdm$phy, xlim=c(-25,0), ylim = c(0, 100), col = "#56B4E9")  # sdm with upgma
ape::ltt.lines(datelife_result_x_phylo[[1]], col = "#E69F00")  # added some missing taxa by congruifying with otols synthetic tree
legend(legend = c("SDM supertree",
"SDM + OToL synthetic tree + PATHd8",
"SDM + MrBayes at random"),
x = -25, y = 100, cex = 0.6,
col = c("#56B4E9", "#E69F00", "#009E73"),
bty = "n", lty = 1)
pdf(file = "/Users/luna/Google Drive/datelife/dating_otol/3_felidae/felid_ltts_1_2018.03.20.pdf", height = 4, width = 4)
ape::ltt.plot(felid_gdr_phylo_all$phylo_all[[i]], xlim=c(-25,0), ylim = c(0, 100), col= "lightgrey")
for (i in 2:length(felid_gdr_phylo_all$phylo_all)){
ape::ltt.lines(felid_gdr_phylo_all$phylo_all[[i]], col= "lightgrey")
}
ape::ltt.lines(felid_sdm$phy, col = "#56B4E9")  # upgma tree
ape::ltt.lines(felid_gdr_phylo_median, col = "#CC79A7")
# ape::ltt.plot(datelife_result_x_phylo[[1]], xlim=c(0, 30), backward = FALSE)  # added some missing taxa by congruifying with otols synthetic tree
# data(strat2012, package="phyloch")
# phyloch::axisGeo(strat2012)  # try this later
legend(legend = c("subset chronograms from OToL",
"SDM supertree",
"median tree"),
x = -25, y = 100, cex = 0.6,
col = c("lightgrey", "#56B4E9", "#CC79A7"),
bty = "n", lty = 1)
dev.off()
pdf(file = "/Users/luna/Google Drive/datelife/dating_otol/3_felidae/felid_ltts_2_2018.03.20.pdf", height = 4, width = 4)
ape::ltt.plot(felid_sdm$phy, xlim=c(-25,0), ylim = c(0, 100), col = "#56B4E9")  # sdm with upgma
ape::ltt.lines(datelife_result_x_phylo[[1]], col = "#E69F00")  # added some missing taxa by congruifying with otols synthetic tree
legend(legend = c("SDM supertree",
"SDM + OToL synthetic tree + PATHd8",
"SDM + MrBayes at random"),
x = -25, y = 100, cex = 0.6,
col = c("#56B4E9", "#E69F00", "#009E73"),
bty = "n", lty = 1)
dev.off()
ape::ltt.plot(felid_sdm$phy, xlim=c(-25,0), ylim = c(0, 100), col = "#56B4E9")  # sdm with upgma
ape::ltt.lines(datelife_result_x_phylo[[1]], col = "#E69F00")  # added some missing taxa by congruifying with otols synthetic tree
legend(legend = c("SDM supertree",
"SDM + OToL synthetic tree + PATHd8",
"SDM + OToL taxonomy + MrBayes",
"SDM + MrBayes at random"),
x = -25, y = 100, cex = 0.6,
col = c("#56B4E9", "#E69F00", "#009E73", "#CC79A7"),
bty = "n", lty = 1)
pdf(file = "/Users/luna/Google Drive/datelife/dating_otol/3_felidae/felid_ltts_2_2018.03.20.pdf", height = 4, width = 4)
ape::ltt.plot(felid_sdm$phy, xlim=c(-25,0), ylim = c(0, 100), col = "#56B4E9")  # sdm with upgma
ape::ltt.lines(datelife_result_x_phylo[[1]], col = "#E69F00")  # added some missing taxa by congruifying with otols synthetic tree
legend(legend = c("SDM supertree",
"SDM + OToL synthetic tree + PATHd8",
"SDM + OToL taxonomy + MrBayes",
"SDM + MrBayes at random"),
x = -25, y = 100, cex = 0.6,
col = c("#56B4E9", "#E69F00", "#009E73", "#CC79A7"),
bty = "n", lty = 1)
dev.off()
library(rmarkdown)
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
setwd("~/Google Drive/datelife/runtime_tests")
load(file="aves.spp.RData")
ninput <- c(600, 800, 900)
setwd("~/Google Drive/datelife/runtime_tests/name_samples")
setwd("~/Google Drive/datelife/runtime_tests/1_name_samples")
for(i in ninput){
x <- vector(mode="list")
for(j in 1:100){
x <- c(x, list(sample(aves.spp$cleaned.names, i)))
}
xname <- paste0("random_sample_",i, "_aves_spp")
assign(xname, x)
save(list=xname, file=paste0(xname,".RData"))
}
str(otol_chronograms)
str(opentree_chronograms)
length(opentree_chronograms)
ls(opentree_chronograms)
length(opentree_chronograms$trees)
opentree_chronograms$trees[1]
opentree_chronograms$trees[[1]]
plot(opentree_chronograms$trees[[1]])
lapply(opentree_chronograms$trees, function(x) length(x$tip.label))
sapply(opentree_chronograms$trees, function(x) length(x$tip.label))
rapply(opentree_chronograms$trees, function(x) length(x$tip.label))
otol_chr_length <- sapply(opentree_chronograms$trees, function(x) length(x$tip.label))
names(otol_chr_length)
class(otol_chr_length)
max(otol_chr_length)
hist(otol_chr_length)
min(otol_chr_length)  #
opentree_chronograms$trees[which(max(otol_chr_length))]
which.max(otol_chr_length)
opentree_chronograms$trees[which.max(otol_chr_length)]
opentree_chronograms$trees[which.min(otol_chr_length)]
table(otol_chr_length)
ocl_table <- table(otol_chr_length)
plot(ocl_table)
plot(ocl_table[-length(ocl_table)])
ocl_table*10/2
sum(ocl_table*10/2)
a <- 1/(50000-4)
a
x <- 5:50000
a <- rep(length(x), 1)
a
a <- rep(1, length(x))
a
names(ocl_table)
ocl_table["6670"]
i <- "6670"
a[i]
names(a)
x <- 5:50000
names(a) <- x
a[i]
a[i] + ocl_table[i]
a[names(ocl_table)]
a[names(ocl_table)] + ocl_table
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a
sum(a)
ap <- a/sum(a)
ap
sampleChr <- function(n, x, otol_chr){
a <- rep(1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
ap <- a/sum(a)
sample(x = x, n, replace = T, prob = ap)
}
sampleChr(100, 2:500)
sampleChr <- function(n, x, otol_chr=opentree_chronograms){
a <- rep(1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
ap <- a/sum(a)
sample(x = x, n, replace = T, prob = ap)
}
sampleChr(100, 2:500)
x <- 2:500
a <- rep(1, length(x))
names(a) <- x
a
a[names(ocl_table)]
a[names(ocl_table)] + ocl_table
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a[names(ocl_table)]
a[!is.na(a)]
sampleChr <- function(n, x, otol_chr=opentree_chronograms){
a <- rep(1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a <- a[!is.na(a)]
ap <- a/sum(a)
sample(x = x, size = n, replace = T, prob = ap)
}
sampleChr(n = 100, x = 2:500)
cache_size <- c(100,200,300,400,500,600,700,800, 900, 1000, 2000, 3000,4000, 5000, 6000, 7000, 8000, 9000, 10000)
prob <- 1:3
is.null(prob)
sampleChr <- function(size, x, prob = NULL, otol_chr=opentree_chronograms){
if(is.null(prob)) {
a <- rep(1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a <- a[!is.na(a)]
prob <- a/sum(a)
}
sample(x = x, size = size, replace = T, prob = prob)
}
x <- 5:50000
a <- rep(1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a <- a[!is.na(a)]
prob <- a/sum(a)
otol_chr=opentree_chronograms
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a <- a[!is.na(a)]
prob <- a/sum(a)
prob
sampleChr(size = 100, prob = prob)
sampleChr <- function(size, x = NULL, prob = NULL, otol_chr=opentree_chronograms){
if(is.null(prob)) {
a <- rep(1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a <- a[!is.na(a)]
prob <- a/sum(a)
}
sample(x = x, size = size, replace = T, prob = prob)
}
sampleChr(size = 100, prob = prob)
sampleChr <- function(size, x, prob = NULL, otol_chr=opentree_chronograms){
if(is.null(prob)) {
a <- rep(1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a <- a[!is.na(a)]
prob <- a/sum(a)
}
sample(x = x, size = size, replace = T, prob = prob)
sampleChr(size = 100, x = x, prob = prob)
>
sampleChr(size = 100, x = x, prob = prob)
sampleChr(size = 100, x = x, prob = prob)
otol_chr_length
ocl_table <- table(otol_chr_length)
ocl_table
a[names(ocl_table)]
a[names(ocl_table)] + ocl_table
a[!is.na(a)]
a <- a[!is.na(a)]
length(a)
prob <- a/sum(a)
sampleChr(size = 100, x = x, prob = prob)
max(ocl_table)
which.max(ocl_table)
names(which.max(ocl_table))
as.numeric(names(which.max(ocl_table)))
rnorm(n = 100, mean = as.numeric(names(which.max(ocl_table))))
rnorm(n = 100, mean = as.numeric(names(which.max(ocl_table))), sd = 100)
rnorm(n = 100, mean = as.numeric(names(which.max(ocl_table))), sd = 50)
ceiling(abs(rnorm(n = size, mean = as.numeric(names(which.max(ocl_table))), sd = size/2)))
size = 100
ceiling(abs(rnorm(n = size, mean = as.numeric(names(which.max(ocl_table))), sd = size/2)))
b <- ceiling(abs(rnorm(n = size, mean = as.numeric(names(which.max(ocl_table))), sd = size/2)))
b_table <- table(b)
b_table
sampleChr <- function(size, x, prob = NULL, otol_chr=opentree_chronograms){
if(is.null(prob)) {
a <- rep(0.1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
m <- as.numeric(names(which.max(ocl_table)))
b <- ceiling(abs(rnorm(n = size, mean = m, sd = m/2)))
b_table <- table(b)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a[names(b_table)] <- b_table
a <- a[!is.na(a)]
prob <- a/sum(a)
}
res <- sample(x = x, size = size, replace = T, prob = prob)
return(res)
}
sampleChr(size = 100, x = x)
x
a <- rep(0.1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
m <- as.numeric(names(which.max(ocl_table)))
b <- ceiling(abs(rnorm(n = size, mean = m, sd = m/2)))
b_table <- table(b)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a[names(b_table)] <- b_table
a <- a[!is.na(a)]
prob <- a/sum(a)
size
prob
sample(x = x, size = size, replace = T, prob = prob)
sum(a)
sampleChr <- function(size, x, prob = NULL, otol_chr=opentree_chronograms){
if(is.null(prob)) {
a <- rep(0.1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
m <- as.numeric(names(which.max(ocl_table)))
b <- ceiling(abs(rnorm(n = size, mean = m, sd = m/2)))
b_table <- table(b)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a[names(b_table)] <- b_table
a <- a[!is.na(a)]
prob <- a/sum(a)
}
res <- sample(x = x, size = size, replace = T, prob = prob)
return(res)
}
sampleChr(size = 100, x = x)
sampleChr <- function(size, x, prob = NULL, otol_chr=opentree_chronograms){
if(is.null(prob)) {
a <- rep(0.1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
m <- as.numeric(names(which.max(ocl_table)))
b <- ceiling(abs(rnorm(n = size, mean = m, sd = m/2)))
b_table <- table(b)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a[names(b_table)] <- b_table
a <- a[!is.na(a)]
prob <- a/sum(a)
}
print(length(x))
print(length(prob))
res <- sample(x = x, size = size, replace = T, prob = prob)
return(res)
}
sampleChr(size = 100, x = x)
b_table
length(b_table)
length(ocl_table)
names(b_table)
a[names(b_table)]
b_table
sampleChr <- function(size, x, prob = NULL, otol_chr=opentree_chronograms){
if(is.null(prob)) {
a <- rep(0.1, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
m <- as.numeric(names(which.max(ocl_table)))
b <- ceiling(abs(rnorm(n = size, mean = m, sd = m/2)))
b_table <- table(b)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a[names(b_table)] <- a[names(b_table)] + b_table
a <- a[!is.na(a)]
prob <- a/sum(a)
}
print(length(x))
print(length(prob))
res <- sample(x = x, size = size, replace = T, prob = prob)
return(res)
}
sampleChr(size = 100, x = x)
sampleChr <- function(size, x, prob = NULL, otol_chr=opentree_chronograms){
if(is.null(prob)) {
a <- rep(0.01, length(x))
names(a) <- x
otol_chr_length <- sapply(otol_chr$trees, function(x) length(x$tip.label))
ocl_table <- table(otol_chr_length)
m <- as.numeric(names(which.max(ocl_table)))
b <- ceiling(abs(rnorm(n = size, mean = m, sd = m/2)))
b_table <- table(b)
a[names(ocl_table)] <- a[names(ocl_table)] + ocl_table
a[names(b_table)] <- a[names(b_table)] + b_table
a <- a[!is.na(a)]
prob <- a/sum(a)
}
print(length(x))
print(length(prob))
res <- sample(x = x, size = size, replace = T, prob = prob)
return(res)
}
sampleChr(size = 100, x = x)
0.9*size
s90 <- ceiling(0.9*size)
sample(x = 5:1000, size = s90)
rnorm(size = s90, mean = 500, sd = 250)
rnorm(n = s90, mean = 500, sd = 250)
rnorm(n = s90, mean = 100, sd = 250)
rnorm(n = s90, mean = 100, sd = 250)
ceiling(abs(rnorm(n = s90, mean = 100, sd = 250)))
ceiling(abs(rnorm(n = s90, mean = 100, sd = 250)))
ceiling(abs(rnorm(n = s90, mean = 100, sd = 250))) + 1
ceiling(abs(rnorm(n = s90, mean = 100, sd = 250))) + 1
ceiling(abs(rnorm(n = s90, mean = 100, sd = 250))) + 1
ceiling(abs(rnorm(n = s90, mean = 100, sd = 300))) + 1
ceiling(abs(rnorm(n = s90, mean = 100, sd = 300))) + 1
ceiling(abs(rnorm(n = s90, mean = 100, sd = 300))) + 1
s90 <- floor(0.9*size)
0.4*size-s90
0.4*(size-s90)
s90 <- floor(0.9*size)
s4 <- floor(0.4*(size-s90))
s3 <- floor(0.5*(size-s90-s4))
s2 <- floor(0.66*(size-s90-s4-s3))
s1 <- size-s90-s4-s3-s2
s90
s4
s3
s2
s1
s2 <- floor(0.67*(size-s90-s4-s3))
s2
s1 <- size-s90-s4-s3-s2
s1
ceiling(abs(rnorm(n = s4, mean = 1500, sd = 300)))
ceiling(abs(rnorm(n = s4, mean = 2000, sd = 500)))
sample(x = 1000:3000, size = s4)
sample(x = 1000:3000, size = s4)
sample(x = 1000:3000, size = s4)
sample(x = 3001:10000, size = s3)
sample(x = 3001:10000, size = s3)
s90 <- ceiling(abs(rnorm(n = s90, mean = 100, sd = 300))) + 1
s4 <- sample(x = 1001:3000, size = s4)
s3 <- sample(x = 3001:10000, size = s3)
s2 <- sample(x = 10001:30000, size = s2)
s1 <- sample(x = 30001:50000, size = s1)
sampleChr2 <- function(size){
s90 <- floor(0.9*size)
s4 <- floor(0.4*(size-s90))
s3 <- floor(0.5*(size-s90-s4))
s2 <- floor(0.67*(size-s90-s4-s3))
s1 <- size-s90-s4-s3-s2
s90 <- ceiling(abs(rnorm(n = s90, mean = 100, sd = 300))) + 1
s4 <- sample(x = 1001:3000, size = s4)
s3 <- sample(x = 3001:10000, size = s3)
s2 <- sample(x = 10001:30000, size = s2)
s1 <- sample(x = 30001:50000, size = s1)
ss <- c(s90, s4, s3, s2, s1)
return(ss)
}
sampleChr2(size = 100)
ceiling(abs(rnorm(n = s4, mean = 1500, sd = 500)))
1000*0.01
library(TreeSim)
?TreeSim
t1 <- sim.bd.taxa(n = 50000, numbsim = 1, lambda = 1, mu = 0)
sampleChr2 <- function(size){
s90 <- floor(0.9*size)
s5 <- floor(0.5*(size-s90))
# s4 <- floor(0.4*(size-s90))
# s3 <- floor(0.5*(size-s90-s4))
s3 <- floor(0.6*(size-s90-s5))
# s2 <- floor(0.67*(size-s90-s4-s3))
# s1 <- size-s90-s4-s3-s2
s1a <- floor(0.5*(size-s90-s5-s3))
s1b <- size-s90-s5-s3-s1a
s90 <- ceiling(abs(rnorm(n = s90, mean = 100, sd = 300))) + 1
ceiling(abs(rnorm(n = s4, mean = 1500, sd = 500)))
# s4 <- sample(x = 1001:3000, size = s4)
s5 <- sample(x = 1001:3000, size = s5)
s3 <- sample(x = 3001:10000, size = s3)
s1a <- sample(x = 10001:30000, size = s1a)
s1b <- sample(x = 30001:50000, size = s1b)
# s1 <- sample(x = 30001:50000, size = s1)  # usaré el que ya esta hecho
# ss <- c(s90, s4, s3, s2, s1)
ss <- c(s90, s5, s3, s1a, s1b)
return(ss)
}
rapply(sampleChr2(100))
sapply(sampleChr2(100))
sampleChr2(100)
for (i in 1:10){
sim_chronograms_size <- c(sim_chronograms_size, sampleChr2(size = 100))
}
sim_chronograms_size <- c()
for (i in 1:10){
sim_chronograms_size <- c(sim_chronograms_size, sampleChr2(size = 100))
}
sim_chronograms_size
pdf(file = "~/Google Drive/datelife/runtime_tests/chr_50k_tips.pdf", height = 100, width = 20)
plot(t1, cex = 0.5)
dev.off()
pdf(file = "~/Google Drive/datelife/runtime_tests/chr_50k_tips.pdf", height = 100, width = 20)
plot(t1[[1]], cex = 0.5)
dev.off()
pdf(file = "~/Google Drive/datelife/runtime_tests/chr_50k_tips.pdf", height = 150, width = 20)
plot(t1[[1]], cex = 0.5, edge.width = 0.3)
dev.off()
pdf(file = "~/Google Drive/datelife/runtime_tests/chr_50k_tips.pdf", height = 200, width = 20)
plot(ladderize(t1[[1]]), cex = 0.5, edge.width = 0.3)
sapply(sim_chronograms_size[1:10], function (x) sim.bd.taxa(n = x, numbsim = 1, lambda = 1, mu = 0))
pdf(file = "~/Google Drive/datelife/runtime_tests/chr_50k_tips.pdf", height = 200, width = 20)
plot(t1[[1]], cex = 0.5, edge.width = 0.3)
dev.off()
max(branching.times(t1))
max(branching.times(t1[[1]]))
sim_chronograms <- sapply(sim_chronograms_size, function (x) sim.bd.taxa(n = x, numbsim = 1, lambda = 1, mu = 0))
sim_chronograms_2018.03.28 <- sim_chronograms
save(sim_chronograms_2018.03.28, file = "~/Google Drive/datelife/runtime_tests/sim_chronograms_2018.03.28.RData")
68/202
setwd("/Users/luna/Desktop/datelife_paper1/")
library(rmarkdown)
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
render(input = "~/Desktop/datelife_paper1/Datelife_paper1.md", output_format = "pdf_document")
